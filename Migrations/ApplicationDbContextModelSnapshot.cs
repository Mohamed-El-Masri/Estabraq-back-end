// <auto-generated />
using System;
using EstabraqTourismAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstabraqTourismAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstabraqTourismAPI.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingReference")
                        .IsUnique();

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2025, 9, 19, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1415),
                            BookingReference = "BK202501001",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1424),
                            CustomerEmail = "ahmed.mohamed@example.com",
                            CustomerName = "أحمد محمد",
                            CustomerPhone = "+966501234567",
                            NumberOfPeople = 2,
                            SpecialRequests = "سيارة إضافية للعائلة",
                            Status = "Confirmed",
                            TotalPrice = 499.98m,
                            TripId = 1,
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1426),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            BookingDate = new DateTime(2025, 10, 4, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1429),
                            BookingReference = "BK202501002",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1430),
                            CustomerEmail = "fatima.ahmed@example.com",
                            CustomerName = "فاطمة أحمد",
                            CustomerPhone = "+966501234568",
                            NumberOfPeople = 1,
                            Status = "Pending",
                            TotalPrice = 499.99m,
                            TripId = 3,
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1430),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookingDate = new DateTime(2025, 9, 4, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1433),
                            BookingReference = "BK202501003",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1434),
                            CustomerEmail = "mohammed.ali@example.com",
                            CustomerName = "محمد علي",
                            CustomerPhone = "+966501234569",
                            NumberOfPeople = 3,
                            SpecialRequests = "وجبة نباتية",
                            Status = "Confirmed",
                            TotalPrice = 599.97m,
                            TripId = 2,
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1434),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1091),
                            Description = "Explore the rich cultural heritage and historical sites",
                            DescriptionAr = "استكشف التراث الثقافي الغني والمواقع التاريخية",
                            Icon = "fa-landmark",
                            IsActive = true,
                            Name = "Cultural Tours",
                            NameAr = "الجولات الثقافية",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1092)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1095),
                            Description = "Exciting adventure activities and outdoor experiences",
                            DescriptionAr = "أنشطة مغامرة مثيرة وتجارب خارجية",
                            Icon = "fa-mountain",
                            IsActive = true,
                            Name = "Adventure Tours",
                            NameAr = "جولات المغامرة",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1095)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1098),
                            Description = "Visit sacred places and religious landmarks",
                            DescriptionAr = "زيارة الأماكن المقدسة والمعالم الدينية",
                            Icon = "fa-mosque",
                            IsActive = true,
                            Name = "Religious Tours",
                            NameAr = "الجولات الدينية",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1098)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1101),
                            Description = "Relaxing beach and coastal experiences",
                            DescriptionAr = "تجارب شاطئية وساحلية مريحة",
                            Icon = "fa-umbrella-beach",
                            IsActive = true,
                            Name = "Beach Tours",
                            NameAr = "جولات الشواطئ",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1110)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1112),
                            Description = "Desert adventures and Bedouin experiences",
                            DescriptionAr = "مغامرات صحراوية وتجارب بدوية",
                            Icon = "fa-sun",
                            IsActive = true,
                            Name = "Desert Safari",
                            NameAr = "سفاري الصحراء",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1113)
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyNameAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TikTok")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Twitter")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Website")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WhatsApp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WorkingHours")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WorkingHoursAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("YouTube")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Baghdad, Iraq",
                            AddressAr = "بغداد، العراق",
                            CompanyName = "Estabraq Tourism",
                            CompanyNameAr = "استبرق للسياحة",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1545),
                            Email = "info@estabraqtourism.com",
                            IsActive = true,
                            Phone = "+964 770 123 4567",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1546),
                            Website = "https://estabraqtourism.com",
                            WhatsApp = "+964 770 123 4567",
                            WorkingHours = "Sunday - Thursday: 9:00 AM - 6:00 PM",
                            WorkingHoursAr = "الأحد - الخميس: 9:00 صباحاً - 6:00 مساءً"
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminReply")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("RepliedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RepliedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("New");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("RepliedByUserId");

                    b.ToTable("ContactMessages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1478),
                            Email = "abdullah.alsaad@email.com",
                            Message = "أرغب في الحصول على مزيد من التفاصيل حول رحلة العلا الأثرية، وما إذا كانت مناسبة للأطفال.",
                            Name = "عبدالله السعد",
                            Phone = "+966501111111",
                            Status = "New",
                            Subject = "استفسار عن رحلة العلا",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1480)
                        },
                        new
                        {
                            Id = 2,
                            AdminReply = "بالطبع يمكننا تنظيم رحلة خاصة لمجموعتكم. سيتواصل معكم فريق المبيعات خلال 24 ساعة.",
                            CreatedAt = new DateTime(2025, 8, 18, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1484),
                            Email = "nora.ahmed@email.com",
                            Message = "هل يمكنكم تنظيم رحلة خاصة لمجموعة من 10 أشخاص إلى الطائف؟",
                            Name = "نورا أحمد",
                            Phone = "+966502222222",
                            RepliedByUserId = 1,
                            Status = "Replied",
                            Subject = "طلب تخصيص رحلة",
                            UpdatedAt = new DateTime(2025, 8, 19, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1485)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 19, 18, 59, 18, 50, DateTimeKind.Utc).AddTicks(1487),
                            Email = "reem.alzahrani@email.com",
                            Message = "أحتاج إلى تغيير تاريخ حجزي من 15 سبتمبر إلى 20 سبتمبر.",
                            Name = "ريم الزهراني",
                            Phone = "+966504444444",
                            Status = "New",
                            Subject = "تعديل الحجز",
                            UpdatedAt = new DateTime(2025, 8, 19, 18, 59, 18, 50, DateTimeKind.Utc).AddTicks(1488)
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.HeroSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BackgroundVideo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ButtonLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ButtonText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ButtonTextAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Subtitle")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SubtitleAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("HeroSections");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.SiteStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiteStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#4CAF50",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1623),
                            IsActive = true,
                            SortOrder = 1,
                            Title = "Happy Customers",
                            TitleAr = "عملاء سعداء",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1624),
                            Value = 1000
                        },
                        new
                        {
                            Id = 2,
                            Color = "#2196F3",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1626),
                            IsActive = true,
                            SortOrder = 2,
                            Title = "Tours Completed",
                            TitleAr = "جولات مكتملة",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1627),
                            Value = 500
                        },
                        new
                        {
                            Id = 3,
                            Color = "#FF9800",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1628),
                            IsActive = true,
                            SortOrder = 3,
                            Title = "Years Experience",
                            TitleAr = "سنوات خبرة",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1629),
                            Value = 10
                        },
                        new
                        {
                            Id = 4,
                            Color = "#9C27B0",
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1631),
                            IsActive = true,
                            SortOrder = 4,
                            Title = "Destinations",
                            TitleAr = "وجهات سياحية",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1631),
                            Value = 50
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFeatured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LocationAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MainImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1220),
                            Description = "Explore the historical landmarks of Riyadh including Masmak Fortress and National Museum",
                            DescriptionAr = "استكشف المعالم التاريخية في الرياض بما في ذلك قلعة المصمك والمتحف الوطني",
                            DiscountPrice = 249.99m,
                            Duration = 6,
                            IsActive = true,
                            IsFeatured = true,
                            Location = "Riyadh, Saudi Arabia",
                            LocationAr = "الرياض، المملكة العربية السعودية",
                            MainImage = "riyadh-tour.jpg",
                            MaxParticipants = 25,
                            Price = 299.99m,
                            Title = "Riyadh Historical Tour",
                            TitleAr = "جولة الرياض التاريخية",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1221)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1226),
                            Description = "Beautiful coastal walk along Jeddah Corniche with stunning Red Sea views",
                            DescriptionAr = "نزهة ساحلية جميلة على طول كورنيش جدة مع إطلالات خلابة على البحر الأحمر",
                            Duration = 4,
                            IsActive = true,
                            IsFeatured = true,
                            Location = "Jeddah, Saudi Arabia",
                            LocationAr = "جدة، المملكة العربية السعودية",
                            MainImage = "jeddah-corniche.jpg",
                            MaxParticipants = 30,
                            Price = 199.99m,
                            Title = "Jeddah Corniche Walk",
                            TitleAr = "جولة كورنيش جدة",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1226)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1233),
                            Description = "Adventure through the largest sand desert in the world with camel riding and camping",
                            DescriptionAr = "مغامرة عبر أكبر صحراء رملية في العالم مع ركوب الجمال والتخييم",
                            DiscountPrice = 499.99m,
                            Duration = 24,
                            IsActive = true,
                            IsFeatured = true,
                            Location = "Empty Quarter, Saudi Arabia",
                            LocationAr = "الربع الخالي، المملكة العربية السعودية",
                            MainImage = "empty-quarter.jpg",
                            MaxParticipants = 15,
                            Price = 599.99m,
                            Title = "Empty Quarter Desert Safari",
                            TitleAr = "سفاري الربع الخالي",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1234)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1331),
                            Description = "Discover the ancient Nabatean city of Hegra and stunning rock formations",
                            DescriptionAr = "اكتشف مدينة الحجر النبطية القديمة والتشكيلات الصخرية المذهلة",
                            DiscountPrice = 699.99m,
                            Duration = 8,
                            IsActive = true,
                            IsFeatured = true,
                            Location = "Al-Ula, Saudi Arabia",
                            LocationAr = "العلا، المملكة العربية السعودية",
                            MainImage = "alula-hegra.jpg",
                            MaxParticipants = 20,
                            Price = 799.99m,
                            Title = "Al-Ula Archaeological Tour",
                            TitleAr = "جولة العلا الأثرية",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1331)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1342),
                            Description = "Religious and historical tour around the holy city of Mecca",
                            DescriptionAr = "جولة دينية وتاريخية حول المدينة المقدسة مكة",
                            DiscountPrice = 179.99m,
                            Duration = 3,
                            IsActive = true,
                            IsFeatured = true,
                            Location = "Mecca, Saudi Arabia",
                            LocationAr = "مكة المكرمة، المملكة العربية السعودية",
                            MainImage = "mecca-ziyarat.jpg",
                            MaxParticipants = 35,
                            Price = 199.99m,
                            Title = "Mecca Ziyarat Tour",
                            TitleAr = "جولة زيارة مكة",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(1342)
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CaptionAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripImages");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripIncluded", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ItemAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripIncluded");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripSchedules");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Customer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 577, DateTimeKind.Utc).AddTicks(9509),
                            Email = "admin@estabraqtourism.com",
                            IsActive = true,
                            Name = "System Administrator",
                            PasswordHash = "$2a$11$JsJEv1/gXv0HBYBC26oUVeET0fGKwioDTqhGQh4ILu8MB5T1t6VMC",
                            Role = "Admin",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 577, DateTimeKind.Utc).AddTicks(9512)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 736, DateTimeKind.Utc).AddTicks(3408),
                            Email = "ahmed.mohamed@example.com",
                            IsActive = true,
                            Name = "أحمد محمد",
                            PasswordHash = "$2a$11$oaFIyKhlvqt/L68ZziG2NOn72qRjTLBNLrNSkWSs3jTBHsVUg4xha",
                            Phone = "+966501234567",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 736, DateTimeKind.Utc).AddTicks(3413)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 896, DateTimeKind.Utc).AddTicks(7368),
                            Email = "fatima.ahmed@example.com",
                            IsActive = true,
                            Name = "فاطمة أحمد",
                            PasswordHash = "$2a$11$9jKTxVmkgdaa6f9Lsp14f.WoINNoWeoyV5Fpknf6jTEdNgfPlpbFm",
                            Phone = "+966501234568",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 17, 896, DateTimeKind.Utc).AddTicks(7370)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(219),
                            Email = "mohammed.ali@example.com",
                            IsActive = true,
                            Name = "محمد علي",
                            PasswordHash = "$2a$11$tE4NMf3VtHJ2EIYzSB2egeYxMb636ZwhuyYg10qfmtA3Cyv2IST5m",
                            Phone = "+966501234569",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2025, 8, 20, 0, 59, 18, 50, DateTimeKind.Utc).AddTicks(223)
                        });
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Booking", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.Trip", "Trip")
                        .WithMany("Bookings")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstabraqTourismAPI.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.ContactMessage", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.User", "RepliedByUser")
                        .WithMany("RepliedMessages")
                        .HasForeignKey("RepliedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RepliedByUser");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Trip", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.Category", "Category")
                        .WithMany("Trips")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripImage", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.Trip", "Trip")
                        .WithMany("Images")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripIncluded", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.Trip", "Trip")
                        .WithMany("IncludedItems")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.TripSchedule", b =>
                {
                    b.HasOne("EstabraqTourismAPI.Models.Trip", "Trip")
                        .WithMany("Schedule")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Category", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.Trip", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Images");

                    b.Navigation("IncludedItems");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("EstabraqTourismAPI.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RepliedMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
